{"version":3,"sources":["src/browserDomMutation.ts","src/index.ts"],"names":[],"mappings":";AAuCuC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAjCvC,IAAM,EAA2B,SAAC,GAC9B,IAAM,EAA0B,CAC5B,OAAQ,KACR,IAAK,EACL,MAAO,GACP,KAAM,QAEV,MAAO,CACH,QAAS,WAAM,OAAA,GACf,IAAK,SAAC,EAAoB,EAA0B,EAAc,GAE9D,MAAO,CACH,OAAM,EACN,IAHiB,SAAT,EAAkB,EAAe,EAAO,IAAK,EAAM,IAAK,EAAM,MAAQ,IAI9E,MAAK,EACL,KAAI,IAGZ,OAAQ,aACR,OAAQ,eAIV,EAAiB,SAAC,EAAwB,EAA2B,GACvE,IAAM,EAAM,SAAS,eAAe,GAEpC,OADA,EAAU,aAAa,GAAK,MAAA,OAAK,EAAL,EAAO,cAAe,MAC3C,GAGL,EAAiB,aAIvB,QAAA,QAAe;;ACjCgD,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAN/D,IAAA,EAAA,EAAA,QAAA,yBAEM,EAAO,SAAS,eAAe,QAE/B,GAAW,EAAA,EAAA,SAAyB,GAE1C,EAAS,IAAI,EAAS,UAAW,KAAM,OAAQ,CAAE,KAAM","file":"src.aa37c0ab.js","sourceRoot":"..","sourcesContent":["import { DomElement, DomMutation, Props } from \"./domMutation\";\n\ntype BrowserDomElement = DomElement & {\n    dom: HTMLElement;\n}\n\nconst createBrowserDomMutation = (rootElement: HTMLElement): DomMutation => {\n    const root: BrowserDomElement = {\n        parent: null,\n        dom: rootElement,\n        props: {},\n        type: 'root',\n    }\n    return {\n        getRoot: () => root,\n        add: (parent: DomElement, after: DomElement | null, type: string, props: Props) => {\n            const dom = type === 'text' ? createTextNode(parent.dom, after.dom, props.text) : createHtmlNode();\n            return {\n                parent,\n                dom,\n                props,\n                type,\n            }\n        },\n        remove: () => {},\n        update: () => {},\n    }\n}\n\nconst createTextNode = (parentDom: HTMLElement, after: HTMLElement | null, text: string) => {\n    const dom = document.createTextNode(text);\n    parentDom.insertBefore(dom, after?.nextSibling ||Â null)\n    return dom;\n}\n\nconst createHtmlNode = () => {\n\n}\n\nexport default createBrowserDomMutation;","import createBrowserDomMutation from \"./browserDomMutation\";\n\nconst root = document.getElementById('root');\n\nconst mutation = createBrowserDomMutation(root as HTMLElement);\n\nmutation.add(mutation.getRoot(), null, 'text', { text: 'blah'})"]}